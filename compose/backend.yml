# Backend Service - FastAPI
# Hot reload with uvicorn --reload
# External database URL only (no local DB containers)

services:
  backend:
    build:
      context: ../services/backend
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    
    container_name: hackbase-backend
    
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    
    volumes:
      # Hot reload - mount source code
      - ../services/backend:/app
    
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV:-development}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CORS_ORIGINS=http://localhost:${FRONTEND_PORT:-3000},https://${DOMAIN:-localhost},http://${DOMAIN:-localhost}
      - API_KEY=${API_KEY:-}
    
    networks:
      - hackathon
    
    labels:
      # Traefik routing for API - flexible HTTP/HTTPS
      - "traefik.enable=true"
      
      # HTTP routing (for local dev)
      - "traefik.http.routers.backend-http.rule=Host(`${DOMAIN:-localhost}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.service=backend"
      
      # HTTPS routing (for production) - only active when ENABLE_HTTPS=true
      - "traefik.http.routers.backend-https.rule=Host(`${DOMAIN:-localhost}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-https.entrypoints=websecure"
      - "traefik.http.routers.backend-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.backend-https.service=backend"
      
      # Service definition
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      
      # Conditional HTTPS redirect (only when ENABLE_HTTPS=true)
      - "traefik.http.middlewares.backend-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.backend-redirect.redirectscheme.permanent=true"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    restart: unless-stopped
